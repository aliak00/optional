// symbol index generated by DDOX - do not edit
var symbols = [
{name: 'optional.match', kind: "module", path: './optional/match.html', attributes: []},
{name: 'optional.match.match', kind: "templatedeclaration", path: './optional/match/match.html', attributes: []},
{name: 'optional.match.match.match', kind: "functiondeclaration", path: './optional/match/match.match.html', attributes: ["auto"]},
{name: 'optional.oc', kind: "module", path: './optional/oc.html', attributes: []},
{name: 'optional.oc.oc', kind: "functiondeclaration", path: './optional/oc/oc.html', attributes: ["auto"]},
{name: 'optional.optional', kind: "module", path: './optional/optional.html', attributes: []},
{name: 'optional.optional.no', kind: "functiondeclaration", path: './optional/optional/no.html', attributes: ["auto"]},
{name: 'optional.optional.none', kind: "variabledeclaration", path: './optional/optional/none.html', attributes: []},
{name: 'optional.optional.Optional', kind: "structdeclaration", path: './optional/optional/Optional.html', attributes: []},
{name: 'optional.optional.Optional.opAssign', kind: "functiondeclaration", path: './optional/optional/Optional.opAssign.html', attributes: ["auto", "ref"]},
{name: 'optional.optional.Optional.opBinary', kind: "functiondeclaration", path: './optional/optional/Optional.opBinary.html', attributes: ["auto"]},
{name: 'optional.optional.Optional.opBinaryRight', kind: "functiondeclaration", path: './optional/optional/Optional.opBinaryRight.html', attributes: ["auto"]},
{name: 'optional.optional.Optional.opCall', kind: "functiondeclaration", path: './optional/optional/Optional.opCall.html', attributes: ["auto"]},
{name: 'optional.optional.Optional.opDollar', kind: "functiondeclaration", path: './optional/optional/Optional.opDollar.html', attributes: ["auto", "const"]},
{name: 'optional.optional.Optional.opEquals', kind: "functiondeclaration", path: './optional/optional/Optional.opEquals.html', attributes: ["const", "nothrow", "safe"]},
{name: 'optional.optional.Optional.opIndex', kind: "functiondeclaration", path: './optional/optional/Optional.opIndex.html', attributes: ["auto"]},
{name: 'optional.optional.Optional.opOpAssign', kind: "functiondeclaration", path: './optional/optional/Optional.opOpAssign.html', attributes: ["auto"]},
{name: 'optional.optional.Optional.opSlice', kind: "functiondeclaration", path: './optional/optional/Optional.opSlice.html', attributes: ["auto"]},
{name: 'optional.optional.Optional.opUnary', kind: "functiondeclaration", path: './optional/optional/Optional.opUnary.html', attributes: ["auto"]},
{name: 'optional.optional.Optional.this', kind: "functiondeclaration", path: './optional/optional/Optional.this.html', attributes: ["pure"]},
{name: 'optional.optional.Optional.toString', kind: "functiondeclaration", path: './optional/optional/Optional.toString.html', attributes: ["inout"]},
{name: 'optional.optional.some', kind: "functiondeclaration", path: './optional/optional/some.html', attributes: ["auto"]},
{name: 'optional.optional.toNullable', kind: "functiondeclaration", path: './optional/optional/toNullable.html', attributes: ["auto"]},
{name: 'optional.optional.toOptional', kind: "functiondeclaration", path: './optional/optional/toOptional.html', attributes: ["auto"]},
{name: 'optional.or', kind: "module", path: './optional/or.html', attributes: []},
{name: 'optional.or.frontOr', kind: "functiondeclaration", path: './optional/or/frontOr.html', attributes: ["auto"]},
{name: 'optional.or.frontOrThrow', kind: "functiondeclaration", path: './optional/or/frontOrThrow.html', attributes: ["auto"]},
{name: 'optional.or.FrontOrThrowException', kind: "classdeclaration", path: './optional/or/FrontOrThrowException.html', attributes: []},
{name: 'optional.or.FrontOrThrowException.cause', kind: "variabledeclaration", path: './optional/or/FrontOrThrowException.cause.html', attributes: []},
{name: 'optional.or.or', kind: "functiondeclaration", path: './optional/or/or.html', attributes: ["auto"]},
{name: 'optional.traits', kind: "module", path: './optional/traits.html', attributes: []},
{name: 'optional.traits.isOptional', kind: "enummemberdeclaration", path: './optional/traits/isOptional.html', attributes: []},
{name: 'optional.traits.isOptionalChain', kind: "enummemberdeclaration", path: './optional/traits/isOptionalChain.html', attributes: []},
{name: 'optional.traits.OptionalTarget', kind: "aliasdeclaration", path: './optional/traits/OptionalTarget.html', attributes: []},
{name: 'optional', kind: "module", path: './optional.html', attributes: []},
];
